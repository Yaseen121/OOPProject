package yaseen.adventuregame.gfx;

import java.awt.image.BufferedImage;

//Class to make parts of the sprite sheets into objects so they dont have to keep being cropped each time it is used
public class Assets
{
	//Constants
	public static final int width = 32;
	public static final int height = 32;
	public static final int playerWidth = 64;
	public static final int playerHeight = 64;
	public static final int tile = 32;
	public static final int uiButtonWidth = 230;
	public static final int uiButtonHeight = 77;
	
	//All bufferedImages and buffered Image arrays used 
	public static BufferedImage grass;
	public static BufferedImage tree;
	public static BufferedImage grassUpperLeft;
	public static BufferedImage grassUpperMiddle;
	public static BufferedImage grassUpperRight;
	public static BufferedImage grassLeft;
	public static BufferedImage grassRight;
	public static BufferedImage grassLowerLeft;
	public static BufferedImage grassLowerMiddle;
	public static BufferedImage grassLowerRight;
	public static BufferedImage tallGrass;
	public static BufferedImage smallRock;
	public static BufferedImage crackedRock;
	public static BufferedImage well;
	public static BufferedImage stairsForwardLeft;
	public static BufferedImage stairsForwardRight;
	public static BufferedImage stairsSideLeft;
	public static BufferedImage stairsSideRight;
	public static BufferedImage water;
	public static BufferedImage waterUpperLeft;
	public static BufferedImage waterUpperMiddle;
	public static BufferedImage waterUpperRight;
	public static BufferedImage waterLeft;
	public static BufferedImage waterRight;
	public static BufferedImage waterLowerLeft;
	public static BufferedImage waterLowerMiddle;
	public static BufferedImage waterLowerRight;
	public static BufferedImage waterInnerUpperLeft;
	public static BufferedImage waterInnerUpperRight;
	public static BufferedImage waterInnerLowerLeft;
	public static BufferedImage waterInnerLowerRight;
	public static BufferedImage cliffBendRight;
	public static BufferedImage cliffBendLeft;
	public static BufferedImage cliffUpperLeft;
	public static BufferedImage cliffUpperMiddle;
	public static BufferedImage cliffUpperRight;
	public static BufferedImage cliffLeft;
	public static BufferedImage cliff;
	public static BufferedImage cliffRight;
	public static BufferedImage cliffLowerLeft;
	public static BufferedImage cliffLowerMiddle;
	public static BufferedImage cliffLowerRight;
	public static BufferedImage bridgeSideLeft;
	public static BufferedImage bridgeSideRight;
	public static BufferedImage bridgeCenterUpperLeft;
	public static BufferedImage bridgeCenterUpperRight;
	public static BufferedImage bridgeCenterLowerLeft;
	public static BufferedImage bridgeCenterLowerRight;
	public static BufferedImage bridgeForwardRight;
	public static BufferedImage bridgeForwardLeft;
	
	public static BufferedImage sand;
	public static BufferedImage sandGrassBottom;
	public static BufferedImage sandGrassRightSide;
	public static BufferedImage sandGrassRightBottomCorner;
	
	public static BufferedImage inventoryUI;
	public static BufferedImage inventorySelected;
	public static BufferedImage bow;
	public static BufferedImage	dagger;
	public static BufferedImage spear;
	public static BufferedImage sword;
	public static BufferedImage bowSprite;
	public static BufferedImage	daggerSprite;
	public static BufferedImage spearSprite;
	public static BufferedImage swordSprite;
	
	public static BufferedImage[] knightDown;
	public static BufferedImage[] knightUp;
	public static BufferedImage[] knightLeft;
	public static BufferedImage[] knightRight;
	public static BufferedImage[] knightBasicAttackUp;
	public static BufferedImage[] knightBasicAttackDown;
	public static BufferedImage[] knightBasicAttackLeft;
	public static BufferedImage[] knightBasicAttackRight;
	public static BufferedImage[] knightSpecialAttackUp;
	public static BufferedImage[] knightSpecialAttackDown;
	public static BufferedImage[] knightSpecialAttackLeft;
	public static BufferedImage[] knightSpecialAttackRight;
	public static BufferedImage[] mageDown;
	public static BufferedImage[] mageUp;
	public static BufferedImage[] mageLeft;
	public static BufferedImage[] mageRight;
	public static BufferedImage[] mageBasicAttackUp;
	public static BufferedImage[] mageBasicAttackDown;
	public static BufferedImage[] mageBasicAttackLeft;
	public static BufferedImage[] mageBasicAttackRight;
	public static BufferedImage[] mageSpecialAttackUp;
	public static BufferedImage[] mageSpecialAttackDown;
	public static BufferedImage[] mageSpecialAttackLeft;
	public static BufferedImage[] mageSpecialAttackRight;
	public static BufferedImage[] daggerSlashUp;
	public static BufferedImage[] daggerSlashDown;
	public static BufferedImage[] daggerSlashLeft;
	public static BufferedImage[] daggerSlashRight;
	public static BufferedImage[] swordSlashUp;
	public static BufferedImage[] swordSlashDown;
	public static BufferedImage[] swordSlashLeft;
	public static BufferedImage[] swordSlashRight;
	public static BufferedImage[] enemyBruteWalkLeft;
	public static BufferedImage[] enemyBruteWalkRight;
	public static BufferedImage[] enemyBruteWalkDown;
	public static BufferedImage[] enemyBruteWalkUp;
	
	public static BufferedImage mainMenuBackground;
	public static BufferedImage controlsBackground;
	public static BufferedImage pausedBackground;
	public static BufferedImage selectCharacterBackground;
	public static BufferedImage gameOverBackground;
	public static BufferedImage winBackground;
	public static BufferedImage playButton;
	public static BufferedImage playButtonHover;
	public static BufferedImage controlsButton;
	public static BufferedImage controlsButtonHover;
	public static BufferedImage quitButton;
	public static BufferedImage quitButtonHover;
	public static BufferedImage resumeButton;
	public static BufferedImage resumeButtonHover;
	public static BufferedImage selectKnight;
	public static BufferedImage selectKnightHover;
	public static BufferedImage selectMage;
	public static BufferedImage selectMageHover;
	public static BufferedImage restartButton;
	public static BufferedImage restartButtonHover;
	
	//Creates several sprite sheets and initialises all the buffered images using 
	//The crop method of the spritesheets that they are saved in
	public static void initialise()
	{
		SpriteSheet inventory = new SpriteSheet(ImageLoader.loadImage("/textures/InventoryBar.png"));
		inventoryUI = inventory.crop(0, 0, 800, 34);
		SpriteSheet inventorySelectedSheet = new SpriteSheet(ImageLoader.loadImage("/textures/SelectedItem.png"));
		inventorySelected = inventorySelectedSheet.crop(0, 0, 36, 34);	
		SpriteSheet mageWalking = new SpriteSheet(ImageLoader.loadImage("/textures/MageWalk.png"));
		mageLeft = new BufferedImage[9];
		mageLeft[0] = mageWalking.crop(0, 1*playerHeight, playerWidth, playerHeight);
		mageLeft[1] = mageWalking.crop(1*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageLeft[2] = mageWalking.crop(2*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageLeft[3] = mageWalking.crop(3*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageLeft[4] = mageWalking.crop(4*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageLeft[5] = mageWalking.crop(5*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageLeft[6] = mageWalking.crop(6*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageLeft[7] = mageWalking.crop(7*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageLeft[8] = mageWalking.crop(8*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageRight = new BufferedImage[9];
		mageRight[0] = mageWalking.crop(0, 3*playerHeight, playerWidth, playerHeight);
		mageRight[1] = mageWalking.crop(1*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageRight[2] = mageWalking.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageRight[3] = mageWalking.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageRight[4] = mageWalking.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageRight[5] = mageWalking.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageRight[6] = mageWalking.crop(6*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageRight[7] = mageWalking.crop(7*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageRight[8] = mageWalking.crop(8*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageDown = new BufferedImage[9];
		mageDown[0] = mageWalking.crop(0, 2*playerHeight, playerWidth, playerHeight);
		mageDown[1] = mageWalking.crop(1*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageDown[2] = mageWalking.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageDown[3] = mageWalking.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageDown[4] = mageWalking.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageDown[5] = mageWalking.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageDown[6] = mageWalking.crop(6*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageDown[7] = mageWalking.crop(7*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageDown[8] = mageWalking.crop(8*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageUp = new BufferedImage[9];
		mageUp[0] = mageWalking.crop(0, 0, playerWidth, playerHeight);
		mageUp[1] = mageWalking.crop(1*playerWidth, 0, playerWidth, playerHeight);
		mageUp[2] = mageWalking.crop(2*playerWidth, 0, playerWidth, playerHeight);
		mageUp[3] = mageWalking.crop(3*playerWidth, 0, playerWidth, playerHeight);
		mageUp[4] = mageWalking.crop(4*playerWidth, 0, playerWidth, playerHeight);
		mageUp[5] = mageWalking.crop(5*playerWidth, 0, playerWidth, playerHeight);
		mageUp[6] = mageWalking.crop(6*playerWidth, 0, playerWidth, playerHeight);
		mageUp[7] = mageWalking.crop(7*playerWidth, 0, playerWidth, playerHeight);
		mageUp[8] = mageWalking.crop(8*playerWidth, 0, playerWidth, playerHeight);
		
		SpriteSheet knightWalking = new SpriteSheet(ImageLoader.loadImage("/textures/KnightWalk.png"));
		knightLeft = new BufferedImage[9];
		knightLeft[0] = knightWalking.crop(0, 1*playerHeight, playerWidth, playerHeight);
		knightLeft[1] = knightWalking.crop(1*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightLeft[2] = knightWalking.crop(2*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightLeft[3] = knightWalking.crop(3*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightLeft[4] = knightWalking.crop(4*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightLeft[5] = knightWalking.crop(5*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightLeft[6] = knightWalking.crop(6*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightLeft[7] = knightWalking.crop(7*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightLeft[8] = knightWalking.crop(8*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightRight = new BufferedImage[9];
		knightRight[0] = knightWalking.crop(0, 3*playerHeight, playerWidth, playerHeight);
		knightRight[1] = knightWalking.crop(1*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightRight[2] = knightWalking.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightRight[3] = knightWalking.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightRight[4] = knightWalking.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightRight[5] = knightWalking.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightRight[6] = knightWalking.crop(6*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightRight[7] = knightWalking.crop(7*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightRight[8] = knightWalking.crop(8*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightDown = new BufferedImage[9];
		knightDown[0] = knightWalking.crop(0, 2*playerHeight, playerWidth, playerHeight);
		knightDown[1] = knightWalking.crop(1*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightDown[2] = knightWalking.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightDown[3] = knightWalking.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightDown[4] = knightWalking.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightDown[5] = knightWalking.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightDown[6] = knightWalking.crop(6*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightDown[7] = knightWalking.crop(7*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightDown[8] = knightWalking.crop(8*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightUp = new BufferedImage[9];
		knightUp[0] = knightWalking.crop(0, 0, playerWidth, playerHeight);
		knightUp[1] = knightWalking.crop(1*playerWidth, 0, playerWidth, playerHeight);
		knightUp[2] = knightWalking.crop(2*playerWidth, 0, playerWidth, playerHeight);
		knightUp[3] = knightWalking.crop(3*playerWidth, 0, playerWidth, playerHeight);
		knightUp[4] = knightWalking.crop(4*playerWidth, 0, playerWidth, playerHeight);
		knightUp[5] = knightWalking.crop(5*playerWidth, 0, playerWidth, playerHeight);
		knightUp[6] = knightWalking.crop(6*playerWidth, 0, playerWidth, playerHeight);
		knightUp[7] = knightWalking.crop(7*playerWidth, 0, playerWidth, playerHeight);
		knightUp[8] = knightWalking.crop(8*playerWidth, 0, playerWidth, playerHeight);
		
		SpriteSheet tileMap = new SpriteSheet(ImageLoader.loadImage("/textures/MapTileSheet.png"));
		grassUpperLeft = tileMap.crop(0, 0, width, height);
		grassUpperMiddle = tileMap.crop(tile, 0, width, height);
		grassUpperRight = tileMap.crop(2*tile, 0, width, height);
		grassLeft = tileMap.crop(0, 2*tile, width, height);
		grass = tileMap.crop(tile, tile, width, height);
		grassRight = tileMap.crop(tile, 2*tile, width, height);
		grassLowerLeft = tileMap.crop(0, 2*tile, width, height);
		grassLowerMiddle = tileMap.crop(tile, 2*tile, width, height);
		grassLowerRight = tileMap.crop(2*tile, 2*tile, width, height);
		tree = tileMap.crop(3*tile, 0, 2*width, 3*height);
		tallGrass = tileMap.crop(5*tile, 0, width, height);
		smallRock = tileMap.crop(6*tile, 0, width, height);
		crackedRock = tileMap.crop(7*tile, 0, width, height);
		well = tileMap.crop(5*tile, tile, 3*width, 2*height);
		stairsForwardLeft = tileMap.crop(14*tile, 0, width, height);
		stairsForwardRight = tileMap.crop(15*tile, 0, width, height);
		stairsSideLeft = tileMap.crop(12*tile, 5*tile, width, height);
		stairsSideRight = tileMap.crop(12*tile, 6*tile, width, height);
		
		waterUpperLeft = tileMap.crop(0, 3*tile, width, height);
		waterUpperMiddle = tileMap.crop(tile, 3*tile, width, height);
		waterUpperRight = tileMap.crop(2*tile, 3*tile, width, height);
		waterLeft = tileMap.crop(0, 4*tile, width, height);
		water = tileMap.crop(tile, 4*tile, width, height);
		waterRight = tileMap.crop(2*tile, 4*tile, width, height);
		waterLowerLeft = tileMap.crop(0, 5*tile, width, height);
		waterLowerMiddle = tileMap.crop(tile, 5*tile, width, height);
		waterLowerRight = tileMap.crop(2*tile, 5*tile, width, height);
		waterInnerUpperLeft = tileMap.crop(4*tile, 4*tile, width, height);
		waterInnerUpperRight = tileMap.crop(3*tile, 4*tile, width, height);
		waterInnerLowerLeft = tileMap.crop(4*tile, 3*tile, width, height);
		waterInnerLowerRight = tileMap.crop(3*tile, 3*tile, width, height);
		
		cliffBendRight = tileMap.crop(8*tile, 0, width, height);
		cliffBendLeft = tileMap.crop(10*tile, 0, width, height);
		cliffUpperLeft = tileMap.crop(8*tile, tile, width, height);
		cliffUpperMiddle = tileMap.crop(9*tile, tile, width, height);
		cliffUpperRight = tileMap.crop(10*tile, tile, width, height);
		cliffLeft = tileMap.crop(8*tile, 2*tile, width, height);
		cliff = tileMap.crop(9*tile, 2*tile, width, height);
		cliffRight = tileMap.crop(10*tile, 2*tile, width, height);
		cliffLowerLeft = tileMap.crop(8*tile, 3*tile, width, height);
		cliffLowerMiddle = tileMap.crop(9*tile, 3*tile, width, height);
		cliffLowerRight = tileMap.crop(10*tile, 3*tile, width, height);
		
		bridgeSideLeft = tileMap.crop(12*tile, 2*tile, width, height);
		bridgeSideRight = tileMap.crop(12*tile, 3*tile, width, height);
		bridgeCenterUpperLeft = tileMap.crop(14*tile, 2*tile, width, height);
		bridgeCenterUpperRight = tileMap.crop(15*tile, 2*tile, width, height);
		bridgeCenterLowerLeft = tileMap.crop(14*tile, 3*tile, width, height);
		bridgeCenterLowerRight = tileMap.crop(15*tile, 3*tile, width, height);
		bridgeForwardLeft = tileMap.crop(14*tile, 5*tile, width, height);
		bridgeForwardRight = tileMap.crop(15*tile, 5*tile, width, height);
		
		sand = tileMap.crop(6*tile, 4*tile, width, height);
		sandGrassBottom = tileMap.crop(6*tile, 5*tile, width, height);
		sandGrassRightSide = tileMap.crop(7*tile, 4*tile, width, height);
		sandGrassRightBottomCorner = tileMap.crop(7*tile, 5*tile, width, height);
		bow = tileMap.crop(0*tile, 8*tile, tile, 2*tile);
		dagger = tileMap.crop(1*tile, 8*tile, tile, 2*tile);
		spear = tileMap.crop(2*tile, 8*tile, tile, 2*tile);
		sword = tileMap.crop(3*tile, 8*tile, tile, 2*tile);
		bowSprite = tileMap.crop(0*tile, 6*tile, tile, tile);
		daggerSprite = tileMap.crop(1*tile, 6*tile, tile, tile);
		spearSprite = tileMap.crop(2*tile, 6*tile, tile, tile);
		swordSprite = tileMap.crop(3*tile, 6*tile, tile, tile);
		
		mainMenuBackground = ImageLoader.loadImage("/textures/MainMenuBackgroundWithTitle.png");
		pausedBackground = ImageLoader.loadImage("/textures/PausedBackground.png");
		selectCharacterBackground = ImageLoader.loadImage("/textures/SelectCharacterBackground.png");
		gameOverBackground = ImageLoader.loadImage("/textures/GameOverBackground.png");
		winBackground = ImageLoader.loadImage("/textures/WinBackground.png");
		controlsBackground = ImageLoader.loadImage("/textures/ControlsMenuBackground.png");
		
		SpriteSheet UIButtons = new SpriteSheet(ImageLoader.loadImage("/textures/UIButtons.png"));
		playButton = UIButtons.crop(0, 0, uiButtonWidth, uiButtonHeight);
		playButtonHover = UIButtons.crop(0, 1*uiButtonHeight, uiButtonWidth, uiButtonHeight);
		controlsButton = UIButtons.crop(0, 2*uiButtonHeight, uiButtonWidth, uiButtonHeight);
		controlsButtonHover = UIButtons.crop(0, 3*uiButtonHeight, uiButtonWidth, uiButtonHeight);
		quitButton = UIButtons.crop(0, 4*uiButtonHeight, uiButtonWidth, uiButtonHeight);
		quitButtonHover = UIButtons.crop(0, 5*uiButtonHeight, uiButtonWidth, uiButtonHeight);
		resumeButton = UIButtons.crop(0, 6*uiButtonHeight, uiButtonWidth, uiButtonHeight);
		resumeButtonHover = UIButtons.crop(0, 7*uiButtonHeight, uiButtonWidth, uiButtonHeight);
		selectKnight = UIButtons.crop(0, 8*uiButtonHeight, 102, 30);
		selectKnightHover = UIButtons.crop(0, 8*uiButtonHeight + 30, 102, 30);
		selectMage = UIButtons.crop(0, 8*uiButtonHeight + 2*30, 102, 30);
		selectMageHover = UIButtons.crop(0, 8*uiButtonHeight + 3*30, 102, 30);
		restartButton = UIButtons.crop(0, 8*uiButtonHeight + 4*30, uiButtonWidth, uiButtonHeight);
		restartButtonHover = UIButtons.crop(0, 9*uiButtonHeight + 4*30, uiButtonWidth, uiButtonHeight);
		
		SpriteSheet knightBasicAttack = new SpriteSheet(ImageLoader.loadImage("/textures/KnightSlash.png"));
		knightBasicAttackUp = new BufferedImage[6];
		knightBasicAttackUp[0] = knightBasicAttack.crop(0, 0, playerWidth, playerHeight);
		knightBasicAttackUp[1] = knightBasicAttack.crop(playerWidth, 0, playerWidth, playerHeight);
		knightBasicAttackUp[2] = knightBasicAttack.crop(2*playerWidth, 0, playerWidth, playerHeight);
		knightBasicAttackUp[3] = knightBasicAttack.crop(3*playerWidth, 0, playerWidth, playerHeight);
		knightBasicAttackUp[4] = knightBasicAttack.crop(4*playerWidth, 0, playerWidth, playerHeight);
		knightBasicAttackUp[5] = knightBasicAttack.crop(5*playerWidth, 0, playerWidth, playerHeight);
		knightBasicAttackLeft = new BufferedImage[6];
		knightBasicAttackLeft[0] = knightBasicAttack.crop(0, playerHeight, playerWidth, playerHeight);
		knightBasicAttackLeft[1] = knightBasicAttack.crop(playerWidth, playerHeight, playerWidth, playerHeight);
		knightBasicAttackLeft[2] = knightBasicAttack.crop(2*playerWidth, playerHeight, playerWidth, playerHeight);
		knightBasicAttackLeft[3] = knightBasicAttack.crop(3*playerWidth, playerHeight, playerWidth, playerHeight);
		knightBasicAttackLeft[4] = knightBasicAttack.crop(4*playerWidth, playerHeight, playerWidth, playerHeight);
		knightBasicAttackLeft[5] = knightBasicAttack.crop(5*playerWidth, playerHeight, playerWidth, playerHeight);
		knightBasicAttackDown = new BufferedImage[6];
		knightBasicAttackDown[0] = knightBasicAttack.crop(0, 2*playerHeight, playerWidth, playerHeight);
		knightBasicAttackDown[1] = knightBasicAttack.crop(playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightBasicAttackDown[2] = knightBasicAttack.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightBasicAttackDown[3] = knightBasicAttack.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightBasicAttackDown[4] = knightBasicAttack.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightBasicAttackDown[5] = knightBasicAttack.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightBasicAttackRight = new BufferedImage[6];
		knightBasicAttackRight[0] = knightBasicAttack.crop(0, 3*playerHeight, playerWidth, playerHeight);
		knightBasicAttackRight[1] = knightBasicAttack.crop(playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightBasicAttackRight[2] = knightBasicAttack.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightBasicAttackRight[3] = knightBasicAttack.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightBasicAttackRight[4] = knightBasicAttack.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightBasicAttackRight[5] = knightBasicAttack.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		
		SpriteSheet knightSpecailAttack = new SpriteSheet(ImageLoader.loadImage("/textures/knightThrust.png"));
		knightSpecialAttackUp = new BufferedImage[8];
		knightSpecialAttackUp[0] = knightSpecailAttack.crop(0*playerWidth, 0*playerHeight, playerWidth, playerHeight); 
		knightSpecialAttackUp[1]  = knightSpecailAttack.crop(1*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackUp[2]  = knightSpecailAttack.crop(2*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackUp[3]  = knightSpecailAttack.crop(3*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackUp[4]  = knightSpecailAttack.crop(4*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackUp[5]  = knightSpecailAttack.crop(5*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackUp[6]  = knightSpecailAttack.crop(6*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackUp[7]  = knightSpecailAttack.crop(7*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackLeft = new BufferedImage[8];
		knightSpecialAttackLeft[0] = knightSpecailAttack.crop(0*playerWidth, 1*playerHeight, playerWidth, playerHeight); 
		knightSpecialAttackLeft[1]  = knightSpecailAttack.crop(1*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackLeft[2]  = knightSpecailAttack.crop(2*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackLeft[3]  = knightSpecailAttack.crop(3*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackLeft[4]  = knightSpecailAttack.crop(4*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackLeft[5]  = knightSpecailAttack.crop(5*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackLeft[6]  = knightSpecailAttack.crop(6*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackLeft[7]  = knightSpecailAttack.crop(7*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackDown = new BufferedImage[8];
		knightSpecialAttackDown[0] = knightSpecailAttack.crop(0*playerWidth, 2*playerHeight, playerWidth, playerHeight); 
		knightSpecialAttackDown[1]  = knightSpecailAttack.crop(1*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackDown[2]  = knightSpecailAttack.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackDown[3]  = knightSpecailAttack.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackDown[4]  = knightSpecailAttack.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackDown[5]  = knightSpecailAttack.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackDown[6]  = knightSpecailAttack.crop(6*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackDown[7]  = knightSpecailAttack.crop(7*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackRight = new BufferedImage[8];
		knightSpecialAttackRight[0] = knightSpecailAttack.crop(0*playerWidth, 3*playerHeight, playerWidth, playerHeight); 
		knightSpecialAttackRight[1]  = knightSpecailAttack.crop(1*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackRight[2]  = knightSpecailAttack.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackRight[3]  = knightSpecailAttack.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackRight[4]  = knightSpecailAttack.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackRight[5]  = knightSpecailAttack.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackRight[6]  = knightSpecailAttack.crop(6*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		knightSpecialAttackRight[7]  = knightSpecailAttack.crop(7*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		
		SpriteSheet mageBasicAttack = new SpriteSheet(ImageLoader.loadImage("/textures/MageSlash.png"));
		mageBasicAttackUp = new BufferedImage[6];
		mageBasicAttackUp[0] =mageBasicAttack.crop(0, 0, playerWidth, playerHeight);
		mageBasicAttackUp[1] =mageBasicAttack.crop(playerWidth, 0, playerWidth, playerHeight);
		mageBasicAttackUp[2] =mageBasicAttack.crop(2*playerWidth, 0, playerWidth, playerHeight);
		mageBasicAttackUp[3] =mageBasicAttack.crop(3*playerWidth, 0, playerWidth, playerHeight);
		mageBasicAttackUp[4] =mageBasicAttack.crop(4*playerWidth, 0, playerWidth, playerHeight);
		mageBasicAttackUp[5] =mageBasicAttack.crop(5*playerWidth, 0, playerWidth, playerHeight);;
		mageBasicAttackLeft = new BufferedImage[6];
		mageBasicAttackLeft[0] =mageBasicAttack.crop(0, playerHeight, playerWidth, playerHeight);
		mageBasicAttackLeft[1] =mageBasicAttack.crop(playerWidth, playerHeight, playerWidth, playerHeight);
		mageBasicAttackLeft[2] =mageBasicAttack.crop(2*playerWidth, playerHeight, playerWidth, playerHeight);
		mageBasicAttackLeft[3] =mageBasicAttack.crop(3*playerWidth, playerHeight, playerWidth, playerHeight);
		mageBasicAttackLeft[4] =mageBasicAttack.crop(4*playerWidth, playerHeight, playerWidth, playerHeight);
		mageBasicAttackLeft[5] =mageBasicAttack.crop(5*playerWidth, playerHeight, playerWidth, playerHeight);
		mageBasicAttackDown = new BufferedImage[6];
		mageBasicAttackDown[0] =mageBasicAttack.crop(0, 2*playerHeight, playerWidth, playerHeight);
		mageBasicAttackDown[1] =mageBasicAttack.crop(playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageBasicAttackDown[2] =mageBasicAttack.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageBasicAttackDown[3] =mageBasicAttack.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageBasicAttackDown[4] =mageBasicAttack.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageBasicAttackDown[5] =mageBasicAttack.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageBasicAttackRight = new BufferedImage[6];
		mageBasicAttackRight[0] =mageBasicAttack.crop(0, 3*playerHeight, playerWidth, playerHeight);
		mageBasicAttackRight[1] =mageBasicAttack.crop(playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageBasicAttackRight[2] =mageBasicAttack.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageBasicAttackRight[3] =mageBasicAttack.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageBasicAttackRight[4] =mageBasicAttack.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageBasicAttackRight[5] =mageBasicAttack.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
	
		SpriteSheet mageSpecailAttack = new SpriteSheet(ImageLoader.loadImage("/textures/mageSpellCast.png"));
		mageSpecialAttackUp = new BufferedImage[6];
		mageSpecialAttackUp[0] = mageSpecailAttack.crop(0*playerWidth, 0*playerHeight, playerWidth, playerHeight); 
		mageSpecialAttackUp[1]  = mageSpecailAttack.crop(1*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackUp[2]  = mageSpecailAttack.crop(2*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackUp[3]  = mageSpecailAttack.crop(3*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackUp[4]  = mageSpecailAttack.crop(4*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackUp[5]  = mageSpecailAttack.crop(5*playerWidth, 0*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackLeft = new BufferedImage[6];
		mageSpecialAttackLeft[0] = mageSpecailAttack.crop(0*playerWidth, 1*playerHeight, playerWidth, playerHeight); 
		mageSpecialAttackLeft[1]  = mageSpecailAttack.crop(1*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackLeft[2]  = mageSpecailAttack.crop(2*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackLeft[3]  = mageSpecailAttack.crop(3*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackLeft[4]  = mageSpecailAttack.crop(4*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackLeft[5]  = mageSpecailAttack.crop(5*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackDown = new BufferedImage[6];
		mageSpecialAttackDown[0] = mageSpecailAttack.crop(0*playerWidth, 2*playerHeight, playerWidth, playerHeight); 
		mageSpecialAttackDown[1]  = mageSpecailAttack.crop(1*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackDown[2]  = mageSpecailAttack.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackDown[3]  = mageSpecailAttack.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackDown[4]  = mageSpecailAttack.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackDown[5]  = mageSpecailAttack.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackRight = new BufferedImage[6];
		mageSpecialAttackRight[0] = mageSpecailAttack.crop(0*playerWidth, 3*playerHeight, playerWidth, playerHeight); 
		mageSpecialAttackRight[1]  = mageSpecailAttack.crop(1*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackRight[2]  = mageSpecailAttack.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackRight[3]  = mageSpecailAttack.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackRight[4]  = mageSpecailAttack.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		mageSpecialAttackRight[5]  = mageSpecailAttack.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		
		SpriteSheet daggerSlash = new SpriteSheet(ImageLoader.loadImage("/textures/DaggerSlash.png"));
		daggerSlashUp = new BufferedImage[6];
		daggerSlashUp[0] =daggerSlash.crop(0, 0, playerWidth, playerHeight);
		daggerSlashUp[1] =daggerSlash.crop(playerWidth, 0, playerWidth, playerHeight);
		daggerSlashUp[2] =daggerSlash.crop(2*playerWidth, 0, playerWidth, playerHeight);
		daggerSlashUp[3] =daggerSlash.crop(3*playerWidth, 0, playerWidth, playerHeight);
		daggerSlashUp[4] =daggerSlash.crop(4*playerWidth, 0, playerWidth, playerHeight);
		daggerSlashUp[5] =daggerSlash.crop(5*playerWidth, 0, playerWidth, playerHeight);;
		daggerSlashLeft = new BufferedImage[6];
		daggerSlashLeft[0] =daggerSlash.crop(0, playerHeight, playerWidth, playerHeight);
		daggerSlashLeft[1] =daggerSlash.crop(playerWidth, playerHeight, playerWidth, playerHeight);
		daggerSlashLeft[2] =daggerSlash.crop(2*playerWidth, playerHeight, playerWidth, playerHeight);
		daggerSlashLeft[3] =daggerSlash.crop(3*playerWidth, playerHeight, playerWidth, playerHeight);
		daggerSlashLeft[4] =daggerSlash.crop(4*playerWidth, playerHeight, playerWidth, playerHeight);
		daggerSlashLeft[5] =daggerSlash.crop(5*playerWidth, playerHeight, playerWidth, playerHeight);
		daggerSlashDown = new BufferedImage[6];
		daggerSlashDown[0] =daggerSlash.crop(0, 2*playerHeight, playerWidth, playerHeight);
		daggerSlashDown[1] =daggerSlash.crop(playerWidth, 2*playerHeight, playerWidth, playerHeight);
		daggerSlashDown[2] =daggerSlash.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		daggerSlashDown[3] =daggerSlash.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		daggerSlashDown[4] =daggerSlash.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		daggerSlashDown[5] =daggerSlash.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		daggerSlashRight = new BufferedImage[6];
		daggerSlashRight[0] =daggerSlash.crop(0, 3*playerHeight, playerWidth, playerHeight);
		daggerSlashRight[1] =daggerSlash.crop(playerWidth, 3*playerHeight, playerWidth, playerHeight);
		daggerSlashRight[2] =daggerSlash.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		daggerSlashRight[3] =daggerSlash.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		daggerSlashRight[4] =daggerSlash.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		daggerSlashRight[5] =daggerSlash.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		SpriteSheet swordSlash = new SpriteSheet(ImageLoader.loadImage("/textures/SwordSlashFitted.png"));
		swordSlashUp = new BufferedImage[6];
		swordSlashUp[0] =swordSlash.crop(0, 0, playerWidth, playerHeight);
		swordSlashUp[1] =swordSlash.crop(playerWidth, 0, playerWidth, playerHeight);
		swordSlashUp[2] =swordSlash.crop(2*playerWidth, 0, playerWidth, playerHeight);
		swordSlashUp[3] =swordSlash.crop(3*playerWidth, 0, playerWidth, playerHeight);
		swordSlashUp[4] =swordSlash.crop(4*playerWidth, 0, playerWidth, playerHeight);
		swordSlashUp[5] =swordSlash.crop(5*playerWidth, 0, playerWidth, playerHeight);;
		swordSlashLeft = new BufferedImage[6];
		swordSlashLeft[0] =swordSlash.crop(0, playerHeight, playerWidth, playerHeight);
		swordSlashLeft[1] =swordSlash.crop(playerWidth, playerHeight, playerWidth, playerHeight);
		swordSlashLeft[2] =swordSlash.crop(2*playerWidth, playerHeight, playerWidth, playerHeight);
		swordSlashLeft[3] =swordSlash.crop(3*playerWidth, playerHeight, playerWidth, playerHeight);
		swordSlashLeft[4] =swordSlash.crop(4*playerWidth, playerHeight, playerWidth, playerHeight);
		swordSlashLeft[5] =swordSlash.crop(5*playerWidth, playerHeight, playerWidth, playerHeight);
		swordSlashDown = new BufferedImage[6];
		swordSlashDown[0] =swordSlash.crop(0, 2*playerHeight, playerWidth, playerHeight);
		swordSlashDown[1] =swordSlash.crop(playerWidth, 2*playerHeight, playerWidth, playerHeight);
		swordSlashDown[2] =swordSlash.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		swordSlashDown[3] =swordSlash.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		swordSlashDown[4] =swordSlash.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		swordSlashDown[5] =swordSlash.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		swordSlashRight = new BufferedImage[6];
		swordSlashRight[0] =swordSlash.crop(0, 3*playerHeight, playerWidth, playerHeight);
		swordSlashRight[1] =swordSlash.crop(playerWidth, 3*playerHeight, playerWidth, playerHeight);
		swordSlashRight[2] =swordSlash.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		swordSlashRight[3] =swordSlash.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		swordSlashRight[4] =swordSlash.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		swordSlashRight[5] =swordSlash.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		
		
		SpriteSheet enemyBruteWalkWalking = new SpriteSheet(ImageLoader.loadImage("/textures/EnemyBruteWalk.png"));
		enemyBruteWalkLeft = new BufferedImage[9];
		enemyBruteWalkLeft[0] = enemyBruteWalkWalking.crop(0, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkLeft[1] = enemyBruteWalkWalking.crop(1*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkLeft[2] = enemyBruteWalkWalking.crop(2*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkLeft[3] = enemyBruteWalkWalking.crop(3*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkLeft[4] = enemyBruteWalkWalking.crop(4*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkLeft[5] = enemyBruteWalkWalking.crop(5*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkLeft[6] = enemyBruteWalkWalking.crop(6*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkLeft[7] = enemyBruteWalkWalking.crop(7*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkLeft[8] = enemyBruteWalkWalking.crop(8*playerWidth, 1*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight = new BufferedImage[9];
		enemyBruteWalkRight[0] = enemyBruteWalkWalking.crop(0, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight[1] = enemyBruteWalkWalking.crop(1*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight[2] = enemyBruteWalkWalking.crop(2*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight[3] = enemyBruteWalkWalking.crop(3*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight[4] = enemyBruteWalkWalking.crop(4*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight[5] = enemyBruteWalkWalking.crop(5*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight[6] = enemyBruteWalkWalking.crop(6*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight[7] = enemyBruteWalkWalking.crop(7*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkRight[8] = enemyBruteWalkWalking.crop(8*playerWidth, 3*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown = new BufferedImage[9];
		enemyBruteWalkDown[0] = enemyBruteWalkWalking.crop(0, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown[1] = enemyBruteWalkWalking.crop(1*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown[2] = enemyBruteWalkWalking.crop(2*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown[3] = enemyBruteWalkWalking.crop(3*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown[4] = enemyBruteWalkWalking.crop(4*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown[5] = enemyBruteWalkWalking.crop(5*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown[6] = enemyBruteWalkWalking.crop(6*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown[7] = enemyBruteWalkWalking.crop(7*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkDown[8] = enemyBruteWalkWalking.crop(8*playerWidth, 2*playerHeight, playerWidth, playerHeight);
		enemyBruteWalkUp = new BufferedImage[9];
		enemyBruteWalkUp[0] = enemyBruteWalkWalking.crop(0, 0, playerWidth, playerHeight);
		enemyBruteWalkUp[1] = enemyBruteWalkWalking.crop(1*playerWidth, 0, playerWidth, playerHeight);
		enemyBruteWalkUp[2] = enemyBruteWalkWalking.crop(2*playerWidth, 0, playerWidth, playerHeight);
		enemyBruteWalkUp[3] = enemyBruteWalkWalking.crop(3*playerWidth, 0, playerWidth, playerHeight);
		enemyBruteWalkUp[4] = enemyBruteWalkWalking.crop(4*playerWidth, 0, playerWidth, playerHeight);
		enemyBruteWalkUp[5] = enemyBruteWalkWalking.crop(5*playerWidth, 0, playerWidth, playerHeight);
		enemyBruteWalkUp[6] = enemyBruteWalkWalking.crop(6*playerWidth, 0, playerWidth, playerHeight);
		enemyBruteWalkUp[7] = enemyBruteWalkWalking.crop(7*playerWidth, 0, playerWidth, playerHeight);
		enemyBruteWalkUp[8] = enemyBruteWalkWalking.crop(8*playerWidth, 0, playerWidth, playerHeight);
		
	}
}
